The ''matrix_divided'' module
=======================

Using ''matrix_divided()''
-----------------------

This fucntion takes a matrix of ints as the first arg and returns another matrix with its values
divided by the second argument.

	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
	>>> matrix = [[1, 2, 3],[4, 5, 6]]

TESTS:
	=== Division by Zero === 
	>>> matrix_divided(matrix, 0)
	Traceback (most recent call last):
		...
	ZeroDivisionError: division by zero

	=== Negative ===
	>>> matrix_divided(matrix, -1)
	[[-1.0, -2.0, -3.0], [-4.0, -5.0, -6.0]]

	=== Float ===
	>>> matrix_divided([[1, 5.5], [3, 5]], 0.1)
	[[10.0, 55.0], [30.0, 50.0]]

	=== Different row size ===
	>>> matrix_divided([[1], [1,2]], 3)
	Traceback (most recent call last):
		...
	TypeError: Each row of the matrix must have the same size

	=== Strings ===
	>>> matrix_divided(matrix,"two")
	Traceback (most recent call last):
		...
	TypeError: div must be a number

	=== Not int or float ===
	>>> matrix_divided([[1,"flop"],[3,4]], 4)
	Traceback (most recent call last):
		...
	TypeError: matrix must be a matrix (list of lists) of integers/floats
